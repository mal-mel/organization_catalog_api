<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="baa2cfe8-02b6-4458-9815-3906b509883a" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pyproject.toml" beforeDir="false" afterPath="$PROJECT_DIR$/pyproject.toml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HttpClientOnboardingState"><![CDATA[{
  "isOnboardingCommentShown": true
}]]></component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 1
}]]></component>
  <component name="ProjectId" id="34Knq2AJAYGAVYKDpBCRMqE11vB" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "Python tests.Python tests for app.tests.conftest.test_building.executor": "Run",
    "Python tests.Python tests for app.tests.test_activities.TestActivities.executor": "Run",
    "Python tests.Python tests for app.tests.test_activities.TestActivities.test_create_activity.executor": "Run",
    "Python tests.Python tests for app.tests.test_activities.TestActivities.test_get_activities_tree.executor": "Run",
    "Python tests.Python tests for app.tests.test_activities.TestActivities.test_get_activities_tree_with_max_depth.executor": "Run",
    "Python tests.Python tests for app.tests.test_activities.TestActivities.test_get_activity_detail.executor": "Run",
    "Python tests.Python tests for app.tests.test_activities.TestActivities.test_get_nonexistent_activity.executor": "Run",
    "Python tests.Python tests for app.tests.test_buildings.TestBuildings.test_get_building_organizations.executor": "Run",
    "Python tests.Python tests for app.tests.test_buildings.TestBuildings.test_get_buildings.executor": "Run",
    "Python tests.Python tests for app.tests.test_organizations.TestOrganizations.test_get_organizations.executor": "Run",
    "Python tests.Python tests for app.tests.test_security.TestSecurityAndErrors.executor": "Run",
    "Python tests.Python tests for app.tests.test_security.TestSecurityAndErrors.test_missing_api_key.executor": "Run",
    "Python tests.Python tests for app.tests.test_security.TestSecurityAndErrors.test_pagination.executor": "Run",
    "Python tests.Python tests for app.tests.test_security_and_errors.TestSecurityAndErrors.executor": "Run",
    "Python tests.Python tests for app.tests.test_security_and_errors.TestSecurityAndErrors.test_health_check.executor": "Run",
    "Python tests.Python tests for app.tests.test_security_and_errors.TestSecurityAndErrors.test_invalid_api_key.executor": "Run",
    "Python tests.Python tests for app.tests.test_security_and_errors.TestSecurityAndErrors.test_missing_api_key.executor": "Run",
    "Python tests.Python tests for app.tests.test_security_and_errors.TestSecurityAndErrors.test_pagination.executor": "Debug",
    "Python tests.Python tests for app.tests.test_security_and_errors.TestSecurityAndErrors.test_root_endpoint.executor": "Run",
    "Python tests.Python tests for app.tests.test_security_and_errors.TestSecurityAndErrors.test_validation_errors.executor": "Run",
    "Python tests.Python tests in tests.executor": "Run",
    "Python.seed_db.executor": "Run",
    "Python.wait_for_db.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252": "true",
    "git-widget-placeholder": "main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/deploy" />
    </key>
  </component>
  <component name="RunManager" selected="Python.wait_for_db">
    <configuration name="wait_for_db" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="organization_catalog_api" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/scripts" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/scripts/wait_for_db.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for tests.test_buildings.TestBuildings.test_get_building_organizations" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="organization_catalog_api" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;tests.test_buildings.TestBuildings.test_get_building_organizations&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for tests.test_security_and_errors.TestSecurityAndErrors" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="organization_catalog_api" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;tests.test_security_and_errors.TestSecurityAndErrors&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for tests.test_security_and_errors.TestSecurityAndErrors.test_missing_api_key" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="organization_catalog_api" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;tests.test_security_and_errors.TestSecurityAndErrors.test_missing_api_key&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests in tests" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="organization_catalog_api" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.wait_for_db" />
        <item itemvalue="Python tests.Python tests for tests.test_security_and_errors.TestSecurityAndErrors" />
        <item itemvalue="Python tests.Python tests in tests" />
        <item itemvalue="Python tests.Python tests for tests.test_security_and_errors.TestSecurityAndErrors.test_missing_api_key" />
        <item itemvalue="Python tests.Python tests for tests.test_buildings.TestBuildings.test_get_building_organizations" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-3aa1da707db6-JavaScript-PY-252.26830.99" />
        <option value="bundled-python-sdk-164cda30dcd9-0af03a5fa574-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-252.26830.99" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="baa2cfe8-02b6-4458-9815-3906b509883a" name="Changes" comment="" />
      <created>1760971317927</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1760971317927</updated>
      <workItem from="1760971318811" duration="26683000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/app/api/routes/organizations.py</url>
          <line>29</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/organization_catalog_api$seed_db.coverage" NAME="seed_db Coverage Results" MODIFIED="1760978860786" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/organization_catalog_api$wait_for_db.coverage" NAME="wait_for_db Coverage Results" MODIFIED="1761165461213" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/organization_catalog_api$.coverage" NAME=" Coverage Results" MODIFIED="1761161310676" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>