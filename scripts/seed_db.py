#!/usr/bin/env python3
import sys
import os
import random

sys.path.append(os.path.dirname(os.path.dirname(__file__)))

from app.core.database import SessionLocal
from app.models.building import Building
from app.models.activity import Activity
from app.models.organization import Organization
from app.models.phone_number import PhoneNumber


def generate_phone_number():
    formats = [
        "###-##-##",
        "8-9##-###-##-##",
        "+7-9##-###-##-##",
        "8-4##-###-##-##"
    ]

    format_str = random.choice(formats)

    phone = ''.join(
        str(random.randint(0, 9)) if c == '#' else c
        for c in format_str
    )

    return phone


def seed():
    print("Starting database seeding...")
    db = SessionLocal()

    try:
        print("Cleaning existing data...")
        db.query(PhoneNumber).delete()
        db.query(Organization).delete()
        db.query(Building).delete()
        db.query(Activity).delete()
        db.commit()

        print("Creating buildings...")
        buildings_data = [
            {"address": "–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞ 1, –æ—Ñ–∏—Å 3", "lat": 55.7558, "lon": 37.6173},
            {"address": "–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ë–ª—é—Ö–µ—Ä–∞ 32/1", "lat": 55.7600, "lon": 37.6200},
            {"address": "–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è 15", "lat": 55.7500, "lon": 37.6100},
            {"address": "–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ê—Ä–±–∞—Ç 25", "lat": 55.7495, "lon": 37.6060},
            {"address": "–≥. –ú–æ—Å–∫–≤–∞, –ø—Ä. –ú–∏—Ä–∞ 10", "lat": 55.7800, "lon": 37.6300},

            {"address": "–≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ù–µ–≤—Å–∫–∏–π –ø—Ä. 50", "lat": 59.9343, "lon": 30.3351},
            {"address": "–≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, —É–ª. –°–∞–¥–æ–≤–∞—è 15", "lat": 59.9260, "lon": 30.3170},

            {"address": "–≥. –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, —É–ª. –õ–µ–Ω–∏–Ω–∞ 25", "lat": 56.8380, "lon": 60.5970},
            {"address": "–≥. –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –ø—Ä. –ö–æ—Å–º–æ–Ω–∞–≤—Ç–æ–≤ 10", "lat": 56.8500, "lon": 60.6100},
        ]

        buildings = []
        for data in buildings_data:
            building = Building(
                address=data["address"],
                latitude=data["lat"],
                longitude=data["lon"]
            )
            buildings.append(building)

        db.add_all(buildings)
        db.flush()
        print(f"Created {len(buildings)} buildings")

        print("Creating activities tree...")

        food = Activity(name="–ï–¥–∞")
        automobiles = Activity(name="–ê–≤—Ç–æ–º–æ–±–∏–ª–∏")
        electronics = Activity(name="–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞")
        clothing = Activity(name="–û–¥–µ–∂–¥–∞")
        services = Activity(name="–£—Å–ª—É–≥–∏")

        meat = Activity(name="–ú—è—Å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è", parent=food)
        dairy = Activity(name="–ú–æ–ª–æ—á–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è", parent=food)
        bakery = Activity(name="–•–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è", parent=food)
        beverages = Activity(name="–ù–∞–ø–∏—Ç–∫–∏", parent=food)

        beef = Activity(name="–ì–æ–≤—è–¥–∏–Ω–∞", parent=meat)
        pork = Activity(name="–°–≤–∏–Ω–∏–Ω–∞", parent=meat)
        chicken = Activity(name="–ö—É—Ä–∏—Ü–∞", parent=meat)
        cheese = Activity(name="–°—ã—Ä—ã", parent=dairy)
        milk = Activity(name="–ú–æ–ª–æ–∫–æ", parent=dairy)
        yogurt = Activity(name="–ô–æ–≥—É—Ä—Ç—ã", parent=dairy)

        trucks = Activity(name="–ì—Ä—É–∑–æ–≤—ã–µ", parent=automobiles)
        cars_light = Activity(name="–õ–µ–≥–∫–æ–≤—ã–µ", parent=automobiles)
        parts = Activity(name="–ó–∞–ø—á–∞—Å—Ç–∏", parent=automobiles)
        accessories = Activity(name="–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã", parent=automobiles)

        tires = Activity(name="–®–∏–Ω—ã", parent=parts)
        brakes = Activity(name="–¢–æ—Ä–º–æ–∑–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", parent=parts)
        engine_parts = Activity(name="–î–≤–∏–≥–∞—Ç–µ–ª—å", parent=parts)

        computers = Activity(name="–ö–æ–º–ø—å—é—Ç–µ—Ä—ã", parent=electronics)
        smartphones = Activity(name="–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã", parent=electronics)
        home_appliances = Activity(name="–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", parent=electronics)

        mens_clothing = Activity(name="–ú—É–∂—Å–∫–∞—è –æ–¥–µ–∂–¥–∞", parent=clothing)
        womens_clothing = Activity(name="–ñ–µ–Ω—Å–∫–∞—è –æ–¥–µ–∂–¥–∞", parent=clothing)
        children_clothing = Activity(name="–î–µ—Ç—Å–∫–∞—è –æ–¥–µ–∂–¥–∞", parent=clothing)

        legal = Activity(name="–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏", parent=services)
        consulting = Activity(name="–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥", parent=services)
        education = Activity(name="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", parent=services)

        activities = [
            food, automobiles, electronics, clothing, services,
            meat, dairy, bakery, beverages,
            beef, pork, chicken, cheese, milk, yogurt,
            trucks, cars_light, parts, accessories,
            tires, brakes, engine_parts,
            computers, smartphones, home_appliances,
            mens_clothing, womens_clothing, children_clothing,
            legal, consulting, education
        ]

        db.add_all(activities)
        db.flush()
        print(f"Created {len(activities)} activities")

        print("Creating organizations...")
        organizations_data = [
            {
                "name": '–û–û–û "–†–æ–≥–∞ –∏ –ö–æ–ø—ã—Ç–∞"',
                "building": buildings[0],
                "phones": 2,
                "activities": [meat, dairy, beef, pork]
            },
            {
                "name": '–ó–ê–û "–ú–æ–ª–æ—á–Ω—ã–µ —Ä–µ–∫–∏"',
                "building": buildings[1],
                "phones": 1,
                "activities": [dairy, cheese, milk, yogurt]
            },
            {
                "name": '–ò–ü "–°–≤–µ–∂–∏–π —Ö–ª–µ–±"',
                "building": buildings[2],
                "phones": 1,
                "activities": [bakery]
            },
            {
                "name": '–û–ê–û "–ú—è—Å–Ω–æ–π –î–≤–æ—Ä"',
                "building": buildings[3],
                "phones": 3,
                "activities": [meat, chicken, beef]
            },

            {
                "name": '–ò–ü "–ê–≤—Ç–æ–ú–∏—Ä"',
                "building": buildings[4],
                "phones": 2,
                "activities": [cars_light, parts, accessories]
            },
            {
                "name": '–û–û–û "–ì—Ä—É–∑–æ–≤–∏–∫–°–µ—Ä–≤–∏—Å"',
                "building": buildings[5],
                "phones": 1,
                "activities": [trucks, parts, tires, brakes]
            },
            {
                "name": '–ó–ê–û "–ê–≤—Ç–æ–î–µ—Ç–∞–ª—å"',
                "building": buildings[6],
                "phones": 2,
                "activities": [parts, engine_parts, brakes]
            },

            {
                "name": '–û–û–û "–¢–µ—Ö–Ω–æ–ú–∏—Ä"',
                "building": buildings[7],
                "phones": 3,
                "activities": [electronics, computers, smartphones]
            },
            {
                "name": '–ò–ü "–ë—ã—Ç–æ–≤–∞—è–¢–µ—Ö–Ω–∏–∫–∞"',
                "building": buildings[8],
                "phones": 1,
                "activities": [home_appliances]
            },

            {
                "name": '–û–û–û "–ü—Ä–∞–≤–æ–≤–µ–¥"',
                "building": buildings[0],
                "phones": 2,
                "activities": [legal, consulting]
            },
            {
                "name": '–ò–ü "–ë–∏–∑–Ω–µ—Å–ö–æ–Ω—Å–∞–ª—Ç"',
                "building": buildings[1],
                "phones": 1,
                "activities": [consulting]
            },
        ]

        organizations = []
        for data in organizations_data:
            phone_numbers = [
                PhoneNumber(number=generate_phone_number())
                for _ in range(data["phones"])
            ]

            organization = Organization(
                name=data["name"],
                building=data["building"],
                phone_numbers=phone_numbers,
                activities=data["activities"]
            )
            organizations.append(organization)

        db.add_all(organizations)
        db.commit()

        print(f"‚úÖ Database seeding completed successfully!")
        print(f"üìä Statistics:")
        print(f"   - Buildings: {len(buildings)}")
        print(f"   - Activities: {len(activities)}")
        print(f"   - Organizations: {len(organizations)}")

        total_phones = sum(len(org.phone_numbers) for org in organizations)
        print(f"   - Phone numbers: {total_phones}")

        print(f"üåç Data is ready for use!")

    except Exception as e:
        db.rollback()
        print(f"‚ùå Error during database seeding: {e}")
        raise
    finally:
        db.close()


if __name__ == "__main__":
    seed()